# Generated by Django 5.2.7 on 2025-10-19 02:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('single', '单选题'), ('judge', '判断题')], max_length=10, verbose_name='题目类型')),
                ('difficulty', models.CharField(choices=[('easy', '简单'), ('medium', '中等'), ('hard', '困难')], max_length=10, verbose_name='难度')),
                ('question', models.TextField(verbose_name='题目内容')),
                ('options', models.JSONField(help_text='存储选项数组，如["A.选项1", "B.选项2", "C.选项3", "D.选项4"]', verbose_name='选项')),
                ('correct_answer', models.IntegerField(help_text='0表示A，1表示B，以此类推', verbose_name='正确答案索引')),
                ('explanation', models.TextField(blank=True, verbose_name='解析')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '题目',
                'verbose_name_plural': '题目',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answers', models.JSONField(default=dict, help_text='存储用户答案，格式：{question_id: answer_index}', verbose_name='用户答案')),
                ('score', models.IntegerField(blank=True, null=True, verbose_name='得分')),
                ('total_questions', models.IntegerField(default=0, verbose_name='总题数')),
                ('correct_count', models.IntegerField(default=0, verbose_name='正确题数')),
                ('passed', models.BooleanField(default=False, verbose_name='是否通过')),
                ('time_limit', models.IntegerField(default=45, verbose_name='时间限制(分钟)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '考试',
                'verbose_name_plural': '考试',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PracticeSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('practice_type', models.CharField(choices=[('sequential', '顺序练习'), ('random', '随机练习')], max_length=20, verbose_name='练习类型')),
                ('answers', models.JSONField(default=dict, verbose_name='用户答案')),
                ('current_question_index', models.IntegerField(default=0, verbose_name='当前题目索引')),
                ('completed', models.BooleanField(default=False, verbose_name='是否完成')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practice_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '练习会话',
                'verbose_name_plural': '练习会话',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PracticeQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, verbose_name='题目顺序')),
                ('answered', models.BooleanField(default=False, verbose_name='是否已答')),
                ('user_answer', models.IntegerField(blank=True, null=True, verbose_name='用户答案')),
                ('is_correct', models.BooleanField(blank=True, null=True, verbose_name='是否正确')),
                ('practice_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.practicesession')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question')),
            ],
            options={
                'verbose_name': '练习题目',
                'verbose_name_plural': '练习题目',
                'ordering': ['order'],
                'unique_together': {('practice_session', 'question')},
            },
        ),
        migrations.AddField(
            model_name='practicesession',
            name='questions',
            field=models.ManyToManyField(through='api.PracticeQuestion', to='api.question'),
        ),
        migrations.CreateModel(
            name='ExamQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, verbose_name='题目顺序')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.exam')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question')),
            ],
            options={
                'verbose_name': '考试题目',
                'verbose_name_plural': '考试题目',
                'ordering': ['order'],
                'unique_together': {('exam', 'question')},
            },
        ),
        migrations.AddField(
            model_name='exam',
            name='questions',
            field=models.ManyToManyField(through='api.ExamQuestion', to='api.question'),
        ),
        migrations.CreateModel(
            name='QuestionImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255, verbose_name='文件名')),
                ('file_path', models.CharField(max_length=500, verbose_name='文件路径')),
                ('status', models.CharField(choices=[('pending', '待处理'), ('processing', '处理中'), ('completed', '完成'), ('failed', '失败')], default='pending', max_length=20, verbose_name='状态')),
                ('total_count', models.IntegerField(default=0, verbose_name='总数量')),
                ('success_count', models.IntegerField(default=0, verbose_name='成功数量')),
                ('error_count', models.IntegerField(default=0, verbose_name='失败数量')),
                ('error_messages', models.JSONField(default=list, verbose_name='错误信息')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_imports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '题目导入',
                'verbose_name_plural': '题目导入',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('user', '普通用户'), ('admin', '管理员')], default='user', max_length=10)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
