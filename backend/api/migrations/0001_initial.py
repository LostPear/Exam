# Generated by Django 4.2.25 on 2025-10-19 02:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='邮箱')),
                ('role', models.CharField(choices=[('user', '普通用户'), ('admin', '管理员')], default='user', max_length=10, verbose_name='角色')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='头像')),
                ('phone', models.CharField(blank=True, default='', max_length=20, verbose_name='手机号')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('in_progress', '进行中'), ('completed', '已完成')], default='in_progress', max_length=20, verbose_name='状态')),
                ('score', models.IntegerField(blank=True, null=True, verbose_name='分数')),
                ('passed', models.BooleanField(default=False, verbose_name='是否通过')),
                ('total_questions', models.IntegerField(default=0, verbose_name='题目总数')),
                ('correct_count', models.IntegerField(default=0, verbose_name='正确数量')),
                ('wrong_count', models.IntegerField(default=0, verbose_name='错误数量')),
                ('duration', models.IntegerField(blank=True, help_text='用户实际花费的时间', null=True, verbose_name='考试时长（秒）')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('submitted_at', models.DateTimeField(blank=True, null=True, verbose_name='提交时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to=settings.AUTH_USER_MODEL, verbose_name='考生')),
            ],
            options={
                'verbose_name': '考试',
                'verbose_name_plural': '考试',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('single', '单选题'), ('judge', '判断题')], max_length=10, verbose_name='题目类型')),
                ('difficulty', models.CharField(choices=[('easy', '简单'), ('medium', '中等'), ('hard', '困难')], default='medium', max_length=10, verbose_name='难度')),
                ('question', models.TextField(verbose_name='题目内容')),
                ('options', models.JSONField(help_text='选项数组，例如: ["选项A", "选项B", "选项C", "选项D"]', verbose_name='选项')),
                ('correct_answer', models.IntegerField(help_text='正确答案的索引，从0开始', verbose_name='正确答案')),
                ('explanation', models.TextField(blank=True, default='', verbose_name='答案解析')),
                ('image', models.ImageField(blank=True, null=True, upload_to='questions/', verbose_name='题目图片')),
                ('category', models.CharField(blank=True, default='', max_length=50, verbose_name='题目分类')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '题目',
                'verbose_name_plural': '题目',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_exams', models.IntegerField(default=0, verbose_name='考试总数')),
                ('passed_exams', models.IntegerField(default=0, verbose_name='通过考试数')),
                ('total_practice', models.IntegerField(default=0, verbose_name='练习总数')),
                ('correct_practice', models.IntegerField(default=0, verbose_name='练习正确数')),
                ('study_time', models.IntegerField(default=0, verbose_name='学习时长（分钟）')),
                ('last_practice_at', models.DateTimeField(blank=True, null=True, verbose_name='最后练习时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户统计',
                'verbose_name_plural': '用户统计',
            },
        ),
        migrations.CreateModel(
            name='PracticeRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_answer', models.IntegerField(help_text='用户选择的答案索引', verbose_name='用户答案')),
                ('is_correct', models.BooleanField(verbose_name='是否正确')),
                ('practice_type', models.CharField(choices=[('sequential', '顺序练习'), ('random', '随机练习')], max_length=20, verbose_name='练习类型')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question', verbose_name='题目')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practice_records', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '练习记录',
                'verbose_name_plural': '练习记录',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExamQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_answer', models.IntegerField(blank=True, help_text='用户选择的答案索引', null=True, verbose_name='用户答案')),
                ('is_correct', models.BooleanField(blank=True, null=True, verbose_name='是否正确')),
                ('order', models.IntegerField(default=0, verbose_name='题目顺序')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_questions', to='api.exam', verbose_name='考试')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question', verbose_name='题目')),
            ],
            options={
                'verbose_name': '考试题目',
                'verbose_name_plural': '考试题目',
                'ordering': ['order'],
                'unique_together': {('exam', 'question')},
            },
        ),
    ]
